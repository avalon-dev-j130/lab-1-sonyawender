/*
 * TODO(Студент): Опишите процесс создания базы данных
 * 1. Создайте все таблицы, согласно предложенной диаграмме.
 * 2. Опишите все необходимые отношения между таблицами.
 * 3. Добавьте в каждую таблицу минимум три записи.
 */
CREATE TABLE ROLES
(
    ID INTEGER UNIQUE GENERATED ALWAYS AS IDENTITY,
    NAME VARCHAR(255) CONSTRAINT PK_ROLE_NAME PRIMARY KEY
);

CREATE TABLE SUPPLIER
(
    ID INTEGER UNIQUE NOT NULL GENERATED ALWAYS AS IDENTITY,
    NAME VARCHAR(255) NOT NULL CONSTRAINT PK_SUPPLIER_NAME PRIMARY KEY,
    ADDRESS VARCHAR(255) NOT NULL,
    PHONE VARCHAR(255),
    REPRESENTATIVE VARCHAR(255) NOT NULL
);

CREATE TABLE USERINFO
(
    ID INTEGER NOT NULL CONSTRAINT PK_USER_ID PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    NAME VARCHAR(255) NOT NULL,
    SURNAME VARCHAR(255) NOT NULL
);

CREATE TABLE "USER"
(
    ID INTEGER UNIQUE GENERATED ALWAYS AS IDENTITY,
    EMAIL VARCHAR(255) NOT NULL CONSTRAINT PK_EMAIL PRIMARY KEY,
    PASSWORD VARCHAR(255) NOT NULL,
    INFO INTEGER UNIQUE,
    ROLE INTEGER,
    CONSTRAINT FK_USER_INFO FOREIGN KEY (INFO) REFERENCES USERINFO(ID),
    CONSTRAINT FK_ROLE FOREIGN KEY (ROLE) REFERENCES ROLES(ID)
);

CREATE TABLE "ORDER"
(
    ID INTEGER CONSTRAINT PK_ID PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    "USER" INTEGER,
    CREATED TIMESTAMP DEFAULT CURRENT TIMESTAMP,
    CONSTRAINT FK_USER FOREIGN KEY ("USER") REFERENCES "USER"(ID)
);

CREATE TABLE PRODUCT
(
    ID INTEGER UNIQUE GENERATED ALWAYS AS IDENTITY,
    CODE VARCHAR(255) CONSTRAINT PK_CODE PRIMARY KEY,
    TITLE VARCHAR(255) NOT NULL,
    SUPPLIER INTEGER,
    INITIAL_PRICE DOUBLE,
    RETAIL_VALUE DOUBLE,
    CONSTRAINT FK_SUPPLIER_ID FOREIGN KEY (SUPPLIER) REFERENCES SUPPLIER(ID)
);

CREATE TABLE ORDER2PRODUCT
    (
        "ORDER" INTEGER,
        PRODUCT INTEGER,
        CONSTRAINT PK_ORDER2PRODUCT PRIMARY KEY ("ORDER", PRODUCT),
        CONSTRAINT FK_PRODUCT FOREIGN KEY (PRODUCT) REFERENCES PRODUCT(ID),
        CONSTRAINT FK_ORDER FOREIGN KEY ("ORDER") REFERENCES "ORDER"(ID)
    );